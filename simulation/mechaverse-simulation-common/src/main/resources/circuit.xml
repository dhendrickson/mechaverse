<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<CellularAutomatonDescriptor xmlns="http://www.mechaverse.org/cellautomaton/model" 
    width="16" height="16" iterationsPerUpdate="1">

  <CellType id="register">
    <Output id="1">
      <UpdateExpression><![CDATA[({output1} & ~{input1}) | ({input2} & {input1})]]></UpdateExpression>
    </Output>
  </CellType>

  <!-- An element that outputs a circuit input. -->
  <CellType id="input">
    <Output id="1">
      <Param id="idx" />
      <UpdateExpression><![CDATA[automatonInput[{idx} % automatonInputLength]]]></UpdateExpression>
    </Output>
  </CellType>

  <!-- An element for routing data from one part of the circuit to another. -->
  <CellType id="interplaneRouting">
    <output id="1">
      <UpdateExpression><![CDATA[({input1} << 1)]]></UpdateExpression>
    </output>
  </CellType>

  <!-- An element for routing data from one part of the circuit to another. -->
  <CellType id="routing3in3out">
    <Output id="1">
      <Param id="input2Mask" />
      <Param id="input3Mask" />
      <UpdateExpression><![CDATA[({input2} & {input2Mask}) | ({input3} & {input3Mask})]]></UpdateExpression>
    </Output>
    <Output id="2">
      <Param id="input1Mask" />
      <Param id="input3Mask" />
      <UpdateExpression><![CDATA[({input1} & {input1Mask}) | ({input3} & {input3Mask})]]></UpdateExpression>
    </Output>
    <Output id="3">
      <Param id="input1Mask" />
      <Param id="input2Mask" />
      <UpdateExpression><![CDATA[({input1} & {input1Mask}) | ({input2} & {input2Mask})]]></UpdateExpression>
    </Output>
  </CellType>

  <CellType id="boolean3in3out">
    <Output id="1">
      <Param id="invert" />
      <!-- Term 1 -->
      <Param id="t1InvertInput1" />
      <Param id="t1MaskInput1" />
      <Param id="t1InvertInput2" />
      <Param id="t1MaskInput2" />
      <Param id="t1InvertInput3" />
      <Param id="t1MaskInput3" />
      <!-- Term 2 -->
      <Param id="t2InvertInput1" />
      <Param id="t2MaskInput1" />
      <Param id="t2InvertInput2" />
      <Param id="t2MaskInput2" />
      <Param id="t2InvertInput3" />
      <Param id="t2MaskInput3" />
      <!-- Term 3 -->
      <Param id="t3InvertInput1" />
      <Param id="t3MaskInput1" />
      <Param id="t3InvertInput2" />
      <Param id="t3MaskInput2" />
      <Param id="t3InvertInput3" />
      <Param id="t3MaskInput3" />
      <!-- Term 4 -->
      <Param id="t4InvertInput1" />
      <Param id="t4MaskInput1" />
      <Param id="t4InvertInput2" />
      <Param id="t4MaskInput2" />
      <Param id="t4InvertInput3" />
      <Param id="t4MaskInput3" />
      <UpdateExpression><![CDATA[
     (({input1}^{t1InvertInput1}&{t1MaskInput1}) | ({input2}^{t1InvertInput2}&{t1MaskInput2}) | ({input3}^{t1InvertInput3}&{t1MaskInput3})
    & ({input1}^{t2InvertInput1}&{t2MaskInput1}) | ({input2}^{t2InvertInput2}&{t2MaskInput2}) | ({input3}^{t2InvertInput3}&{t2MaskInput3})
    & ({input1}^{t3InvertInput1}&{t3MaskInput1}) | ({input2}^{t3InvertInput2}&{t3MaskInput2}) | ({input3}^{t3InvertInput3}&{t3MaskInput3})
    & ({input1}^{t4InvertInput1}&{t4MaskInput1}) | ({input2}^{t4InvertInput2}&{t4MaskInput2}) | ({input3}^{t4InvertInput3}&{t4MaskInput3}))
    ^ {invert}  
      ]]></UpdateExpression>
    </Output>
  </CellType>

  <LogicalUnit neighborConnections="3" >
    <row>
      <Cell type="routing3in3out" />
      <Cell type="routing3in3out" />
      <Cell type="routing3in3out" />
      <Cell type="routing3in3out" />
    </row>
    <row>
      <Cell type="boolean3in3out" />
      <Cell type="boolean3in3out" />
      <Cell type="boolean3in3out" />
      <Cell type="boolean3in3out" />
    </row>
    <row>
      <Cell type="boolean3in3out" />
      <Cell type="boolean3in3out" />
      <Cell type="boolean3in3out" />
      <Cell type="boolean3in3out" />
    </row>
    <row>
      <Cell type="routing3in3out" />
      <Cell type="routing3in3out" />
      <Cell type="routing3in3out" />
      <Cell type="routing3in3out" />
    </row>
  </LogicalUnit>
</CellularAutomatonDescriptor>